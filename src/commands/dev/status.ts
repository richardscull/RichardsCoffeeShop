import { SlashCommandBuilder } from '@discordjs/builders';
import { ChatInputCommandInteraction, EmbedBuilder } from 'discord.js';
import os from 'os';

export const data = new SlashCommandBuilder()
  .setName('status')
  .setDescription(`Bot's status`);

export async function execute(interaction: ChatInputCommandInteraction) {
  //TODO WILL POBABLY CHANGE EMBED DESCRIPTION AND IMAGE
  const statusEmbed = new EmbedBuilder()
    .setAuthor({
      name: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –æ—Ç—á–µ—Ç –±–æ—Ç–∞',
      iconURL: interaction.client.user.displayAvatarURL(),
    })
    .setColor('#9c5b3a')
    .setTitle('> "_–ö–æ—Ñ–µ–π–Ω—è –†–∏—á–∞—Ä–¥–∞_"')
    .setDescription(
      `üåø –ë–æ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ **${
        interaction.client.guilds.cache.size
      }** —Å–µ—Ä–≤–µ—Ä–∞—Ö –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–µ—Ç **${interaction.client.guilds.cache.reduce(
        (acc, guild) => acc + guild.memberCount,
        0
      )}** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!\nüçÉ –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–µ—Å—Ç–∞—Ä—Ç –±—ã–ª: **${interaction.client.readyAt.toDateString()}**\nüçµ –ë–æ—Ç —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: **${Math.floor(
        interaction.client.uptime / (24 * 60 * 60 * 1000)
      )}** –¥–Ω–µ–π!\n\nüå± **–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:**`
    )
    //TODO: Make all images locally in src dir.
    .setImage(
      'https://media.discordapp.net/attachments/543779600497508352/986701559415050280/cover.png'
    )
    .setFooter({
      text: `‚öôÔ∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –ø–∞–º—è—Ç–∏: ${
        (((os.totalmem() - os.freemem()) / os.totalmem()) * 100).toFixed(2) +
        '%'
      }; ü™Ñ –ü–∏–Ω–≥: –ó–∞–≥—Ä—É–∑–∫–∞...`,
    });

  const statusMsg = await interaction.reply({
    embeds: [statusEmbed],
    fetchReply: true,
  });
  statusEmbed.setFooter({
    text: `‚öôÔ∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –ø–∞–º—è—Ç–∏: ${
      (((os.totalmem() - os.freemem()) / os.totalmem()) * 100).toFixed(2) + '%'
    }; ü™Ñ –ü–∏–Ω–≥: ${statusMsg.createdTimestamp - interaction.createdTimestamp}–º—Å`,
  });
  interaction.editReply({ embeds: [statusEmbed] });
}
